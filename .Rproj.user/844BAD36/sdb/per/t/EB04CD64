{
    "collab_server" : "",
    "contents" : "---\ntitle: \"大數據分析方法\"\nauthor: \"曾意儒 Yi-Ju Tseng, 長庚大學資管系\"\ndate: \"April 11, 2016\"\noutput: ioslides_presentation\nsubtitle: '探索性分析 Exploratory Analysis: 圖形分析'\nhighlighter: highlight.js\n---\n\n\n## 複習\n- 將.csv檔案讀入R\n```{r}\ndata <- read.csv('open.csv')\ndata\n```\n\n\n## 複習\n- 將XML檔案讀入R\n    - `XML`\n\n```{r warning=FALSE,message=FALSE}\nlibrary(XML)\nfileUrl <- \"http://www.w3schools.com/xml/simple.xml\"\ndoc <- xmlTreeParse(fileUrl,useInternal=TRUE)\nrootNode <- xmlRoot(doc)\nrootNode\n```\n\n\n## 複習\n- 將XML檔案讀入R\n- 針對某個tag取值\n```{r explore4}\nxpathSApply(rootNode,\"//name\",xmlValue)#取得所有\"name\"標籤內的資料\nxpathSApply(rootNode,\"//price\",xmlValue)#取得所有\"price\"標籤內的資料\n```\n\n## 複習\n- 使用APIs讀取檔案\n- 將JSON檔案讀入R\n    - `jsonlite`\n    - `RCurl`\n    - URL: \"http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927\"\n```{r message=FALSE,warning=FALSE}\nlibrary(jsonlite)\nlibrary(RCurl)\nWaterData<-fromJSON(\n    getURL(\"http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927\"))\nhead(WaterData$result$results)\n```\n\n## 複習\n- 使用APIs讀取檔案, 將JSON檔案讀入R\n```{r message=FALSE,warning=FALSE}\nWaterData<-fromJSON(\n    getURL(\"http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927\"))\nhead(WaterData$result$results)\n```\n\n## 作業範例\n```{r eval=FALSE}\nif (!require('Rfacebook')){\n    install.packages(\"Rfacebook\")\n    library(Rfacebook)\n}\ntoken <- \"Your token\"\ntotalPage<-NULL ##重要\nlastDate<-Sys.Date()\nDateVector<-seq(as.Date(\"2016-01-01\"),lastDate,by=\"5 days\")\nDateVectorStr<-as.character(DateVector)\nfor(i in 1:(length(DateVectorStr)-1)){\n    tempPage<-getPage(\"tsaiingwen\", token,since = DateVectorStr[i],\n                      until = DateVectorStr[i+1])\n    totalPage<-rbind(totalPage,tempPage)\n}\n```\n\n## 作業執行結果 totalPage\n<img src=\"Fig/totalPage.png\" width=\"800px\">\n\n## 加分題-粉絲留言頻率\n先把每篇留言的人找出來\n```{r eval=FALSE}\ntotalComment<-NULL\nfor(i in 1:nrow(totalPage)){ ##會跑很久.....建議先跑十筆就好(1:10)\n    post<-getPost(totalPage$id[i],token,\n                  n.comments = totalPage$comments_count)\n    tempComment<-cbind(post$post$id,post$comments$from_name)\n    totalComment<-rbind(totalComment,tempComment)\n}\n```\n<img src=\"Fig/FBBoundPost.png\" width=\"800px\">\n\n## totalComment\n\n```\n可能會出現There were 50 or more warnings \n(use warnings() to see the first 50)\n\n50: In if (n.comments < 500) { ... :\n  the condition has length > 1 and only the first element will be used\n```\n<img src=\"Fig/totalComment.png\" width=\"500px\">\n\n## 分析\n```{r eval=FALSE}\ntotalComment<-data.frame(totalComment)\ncolnames(totalComment)<-c(\"postID\",\"commentName\")\nNameCount<-aggregate(postID~commentName,totalComment,FUN=length)\nhead(NameCount[order(NameCount$postID,decreasing = T),],10)\n```\n```\n      commentName postID\n31055      李雲方   1001\n5349     Gao Gary    879\n13282    Pin Chen    617\n1295     Ben  Hsu    480\n21142      余國鋒    443\n29199      曾景釗    413\n23378      吳志豐    384\n21428        偲歆    347\n2471   Cheng Teng    343\n6654  Hui Mei Lin    335\n```\n\n## 誰啊？...\n<img src=\"Fig/User1.png\" width=\"800px\">\n\n## 誰啊？......\n<img src=\"Fig/User2.png\" width=\"800px\">\n\n## 誰啊？...........\n<img src=\"Fig/User3.png\" width=\"800px\">\n\n## 歐！？！\n<img src=\"Fig/User4.png\" width=\"800px\">\n\n## 參考資源\n\n- R Bloggers 有很多[爬蟲範例](http://www.r-bloggers.com/?s=Web+Scraping)（英文）\n- [Ptt爬蟲實作](http://bryannotes.blogspot.tw/2014/08/r-ptt-wantedsocial-network-analysis.html) \n- [大數學堂 網頁爬蟲課程](http://www.largitdata.com/course_list/1)\n\n\n##Other Data\n- MySQL `RMySQL`\n- HDF5 `rhdf5`\n- Weka `foreign`\n- Stata `foreign`\n- SPSS `Hmisc`\n- SAS `Hmisc`\n- GIS `rgdal`\n- Images `jpeg`\n- Music `tuneR`\n\n\n##每次開始前\n- 打開GitHub桌面版\n- 打GitHub帳密與Git config資料\n- **Clone**上次交的作業回本機端(存到桌面)\n+ 提示：左上角的+號，選**Clone**\n- 點兩下*Clone回來的資料夾*裡面的**.Rproj**\n- 下載[今天要用的R Code](https://github.com/yijutseng/BigDataCGUIM/blob/master/BigData20160411.Rmd)\n\n# Data Manipulation\n\n## Start with reshaping\n[http://www.statmethods.net/management/reshape.html](http://www.statmethods.net/management/reshape.html)\n```{r results='hide',message=FALSE, warning=FALSE}\nif (!require('reshape2')){\n    install.packages(\"reshape2\")\n    library(reshape2)\n}\n```\n```{r reshape2}\nhead(mtcars)\n```\n\n\n## Melting data frames\n[http://www.statmethods.net/management/reshape.html](http://www.statmethods.net/management/reshape.html)\n\n```{r mtcars}\nmtcars$carname <- rownames(mtcars)\ncarMelt <- melt(mtcars,id=c(\"carname\",\"gear\",\"cyl\"),\n                measure.vars=c(\"mpg\",\"hp\"))\nhead(carMelt,n=3)\ntail(carMelt,n=3)\n```\n\n## Casting data frames -1\n[http://www.statmethods.net/management/reshape.html](http://www.statmethods.net/management/reshape.html)\n\n```{r }\ncylData <- dcast(carMelt, cyl ~ variable)\ncylData\n```\n\n## Casting data frames -2\n[http://www.statmethods.net/management/reshape.html](http://www.statmethods.net/management/reshape.html)\n\n```{r }\ncylData <- dcast(carMelt, cyl ~ variable,mean)\ncylData\n```\n\n\n\n## More information\n- `reshape` [教學](http://www.slideshare.net/jeffreybreen/reshaping-data-in-r)\n- `data.table` [教學](https://www.datacamp.com/community/tutorials/data-table-r-tutorial)\n\n\n# 圖形分析\n\n## Principles of Analytic Graphics\n\n- 比較，呈現差異\n    - 比較什麼？誰跟誰比較？\n\n## 比較，呈現差異\n```{r message=FALSE,warning=FALSE}\nlibrary(SportsAnalytics) #install.packages(\"SportsAnalytics\")\nNBA1415<-fetch_NBAPlayerStatistics(\"14-15\")\nboxplot(Blocks~Position,data=NBA1415)\n```\n\n## Principles of Analytic Graphics\n\n- 比較，呈現差異\n    - 比較什麼？誰跟誰比較？\n\n- 呈現因果關係（causality）,機制（mechanism）,結果解釋（explanation）,系統化的結構（systematic structure）\n    - 因果模型？為什麼你想要做這樣的比較\n\n## 呈現因果關係（causality）\n<img src=\"Fig/cau.png\" width=\"800px\">\n\n## Principles of Analytic Graphics\n\n- 比較，呈現差異\n    - 比較什麼？誰跟誰比較？\n\n- 呈現因果關係（causality）,機制（mechanism）,結果解釋（explanation）,系統化的結構（systematic structure）\n    - 因果模型？為什麼你想要做這樣的比較\n\n- 呈現多變數（Multivariate）資料\n    - 多變數（Multivariate）：超過兩個變數就叫多變數\n    - 所有真實事件都是多變數的\n\n\n## 呈現多變數（Multivariate）資料\n```{r message=FALSE, warning=FALSE,fig.height=3.5}\nlibrary(ggplot2) #install.packages(\"ggplot2\")\nqplot(TotalPoints, TotalMinutesPlayed,\n      facets = .~Position, data = NBA1415)+\n    stat_smooth(method=\"glm\")\n```\n\n## 呈現多變數（Multivariate）資料\n```{r message=FALSE, warning=FALSE,fig.height=3.5}\n#library(ggplot2) #install.packages(\"ggplot2\")\nqplot(TotalRebounds, TotalMinutesPlayed,\n      facets = .~Position, data = NBA1415)+\n    stat_smooth(method=\"glm\")\n```\n\n## Principles of Analytic Graphics\n- 將證據整合呈現\n    - 在同一個畫面呈現文字、數字、影像、圖表\n    - 盡量用圖形呈現資料\n\n## 將證據整合呈現\n<img src=\"Fig/int.png\" width=\"500px\">\n\n## Principles of Analytic Graphics\n- 將證據整合呈現\n    - 在同一個畫面呈現文字、數字、影像、圖表\n    - 盡量用圖形呈現資料\n\n- 將圖表做適當的標記與說明，包括xy軸名稱、單位、資料來源等\n    - 資料圖表必須可以呈現你想說的故事\n\n\n## Principles of Analytic Graphics\n- 將證據整合呈現\n    - 在同一個畫面呈現文字、數字、影像、圖表\n    - 盡量用圖形呈現資料\n\n- 將圖表做適當的標記與說明，包括xy軸名稱、單位、資料來源等\n    - 資料圖表必須可以呈現你想說的故事\n  \n- 內容才是最重要的\n    - 資料不好，分析不好，圖表再美也沒有用\n  \nEdward Tufte (2006). *Beautiful Evidence*, Graphics Press LLC. [www.edwardtufte.com](http://www.edwardtufte.com)\n\n\n## 為什麼要畫圖？\n\n* To understand data properties\n* To find patterns in data\n* To suggest modeling strategies\n* To \"debug\" analyses\n* To communicate results\n\n1~4: 探索圖 (Exploratory graphs)\n\n5: 結果圖 (Final graphs)\n\n## 探索圖的特色\n\n* They are made quickly\n* A large number are made\n* The goal is for personal understanding\n* Axes/legends are generally cleaned up (later)\n* Color/size are primarily used for information\n\n# 用R畫圖的常用Packages\n\n## 用R畫圖的Packages\n\n- Base: plot()\n- lattice: `library(lattice)`\n- ggplot: `library(ggplot2)`\n\n## 用R畫圖101: Base\n\n* \"Artist's palette\" model\n* Start with blank canvas and build up from there\n* Start with plot function (or similar)\n* Use annotation functions to add/modify (`text`, `lines`, `points`,\n  `axis`)\n\n\n## 用R畫圖101: Base\n\n* 方便，跟人類想像的畫圖方法一樣，一步一步畫\n\n* 畫上去就不能反悔，如果想改只能從頭來（跟在紙上畫圖一樣）\n\n* code有時蠻難看懂\n\n* 用一連串的單一指令，將圖片的要件堆疊上去\n\n\n\n## Base Plot() ?plot\n\n```{r,fig.height=3,fig.width=8}\nif (!require('datasets')){\n    install.packages(\"datasets\")\n    library(datasets)\n}\ndata(cars)\nplot(cars$speed, cars$dist)\n```\n\n\n## The Lattice System\n\n* 單一個函數（function）作圖 (`xyplot`, `bwplot`,etc.)\n\n* 在呈現三個變數的關係時很好用: Looking at how y changes with x across levels of z\n\n* 圖形參數（邊緣、空白）等都自動調好了\n\n* 一次要放多張圖在同一畫面上很好用\n\n\n## The Lattice System\n\n* 因為是單函數畫圖，一次就要想好所有設定\n\n* 在圖上做標記有點難\n\n* 不能再圖上堆疊任何想加的東西\n\n## Lattice Plot\n\n```{r,message=FALSE,warning=FALSE}\nif (!require('lattice')){\n    install.packages(\"lattice\")\n    library(lattice)\n}\nstate <- data.frame(state.x77, region = state.region)\nstate\n```\n\n## Lattice Plot\nNeed `library(lattice)`\n```{r,fig.height=2,fig.width=8}\nxyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))\n```\n\n- `Life.Exp ~ Income | region`: y ~ x | block\n- `data`: data frame\n- `layout = c(4, 1)`: 4 columns, 1 row\n\n## Lattice Plot\nNeed `library(lattice)`\n```{r,warning=FALSE,fig.height=2.5,fig.width=8}\nxyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))\n```\n- `layout = c(2, 2)`: 2 columns, 2 rows\n\n\n## The ggplot2 System\n\n* 整合base和lattice兩種畫圖方法的特色\n\n* 和lattice一樣自動調整空白和文字，但也和base一樣可以一層一層加文字和點\n\n\n\n## ggplot2 Plot\n```{r, message=FALSE,warning=FALSE,fig.height=3,fig.width=6}\nif (!require('ggplot2')){\n    install.packages(\"ggplot2\")\n    library(ggplot2)\n}\nqplot(Life.Exp, Income,facets = .~region, data = state)\n```\n\n## ggplot2 Example 2\nNeed `library(ggplot2)`\n```{r, message=FALSE,fig.height=3.5,fig.width=6}\ndata(mpg)\nqplot(displ, hwy, data = mpg)\n```\n\n\n## Summary\n\n* Base: 一層疊一層，醜醜醜\n\n* Lattice: 用一個指令畫完整張圖，有多種功能，方便一次畫多個圖\n\n* ggplot2: 可以以一層疊一層，也能一次畫完。推薦！\n\n\n\n## References\n- Roger D. Peng & Elizabeth Matsui (2015) *The Art of Data Science*, Leanpub\n- Paul Murrell (2011). *R Graphics*, CRC Press.\n- Hadley Wickham (2009). *ggplot2*, Springer.\n- 王亮博 [R Visualization - Using ggplot2](https://blog.liang2.tw/2013-RConf-ggplot2-intro/)\n\n# Plotting System--Base\n\n## Plotting System--Base\n\n- *graphics*: contains plotting functions for the \"base\" graphing\n   systems, including `plot`, `hist`, `boxplot` and many others.\n\n- *grDevices*: contains all the code implementing the various graphics\n   devices, including X11, PDF, PostScript, PNG, etc.\n\n\n## 作圖步驟\n\n作圖前，先想想:\n\n- 圖要呈現在哪裡？螢幕上？還是存成檔案？\n\n- 圖形會怎麼被使用\n  - Is the plot for viewing `temporarily` on the screen?  \n  - Will it be presented in a `web browser`?\n  - Will it eventually end up in a `paper` that might be `printed`? \n  - Are you using it in a `presentation`?\n\n- 圖上會有很多資料點嗎？還是只有一些資料？\n\n\n## Base Graphics\n\n- 作圖兩階段\n  - Initializing a new plot\n  - Annotating (adding to) an existing plot\n\n- 用 `plot(x, y)` or `hist(x)` 建立新的圖\n\n- `plot`其實有很多參數，但都有預設值\n\n- 用`?par`去看這些餐度的意義，還有怎麼設定\n\n\n\n## Simple Base Graphics: Histogram\n\n```{r,fig.height=3.5}\nlibrary(datasets)\nhist(airquality$Ozone)  ## Draw a new plot\n```\n\n\n\n## Simple Base Graphics: Scatterplot\n\n```{r,fig.height=3.5}\nlibrary(datasets)\nwith(airquality, plot(Wind, Ozone))\n```\n\n\n\n## Simple Base Graphics: Boxplot\n\n```{r,fig.height=3.5}\nlibrary(datasets)\nairquality <- transform(airquality, Month = factor(Month))\nboxplot(Ozone ~ Month, airquality, xlab = \"Month\", ylab = \"Ozone (ppb)\")\n```\n\n\n\n## 畫圖重要參數- Base\n\n- `pch`: the plotting symbol (default is open circle)\n- `lty`: the line type (default is solid line), can be dashed, dotted, etc.\n- `lwd`: the line width, integer \n- `col`: the plotting color,  用`colors()` 來看有哪些顏色可用\n- `xlab`: character string for the x-axis label\n- `ylab`: character string for the y-axis label\n\n\n\n\n## 畫圖重要參數- Base\n\n用 `par()` function 來設定畫圖的參數們\n\n- `las`: the orientation of the axis labels on the plot\n- `bg`: the background color\n- `mar`: the margin size\n- `oma`: the outer margin size (default is 0 for all sides)\n- `mfrow`: number of plots per row, column (plots are filled row-wise) \n- `mfcol`: number of plots per row, column (plots are filled column-wise)\n\n\n\n## 畫圖重要參數- Base\n\nDefault values for global graphics parameters\n\n```{r}\npar(\"lty\")\npar(\"col\")\npar(\"pch\")\n```\n\n\n\n## 畫圖重要參數- Base\n\nDefault values for global graphics parameters\n\n```{r}\npar(\"bg\")\npar(\"mar\")\npar(\"mfrow\")\n```\n\n\n\n## Base Plotting Functions\n\n- `plot`: 畫散佈圖或是其他類型的圖，看資料型態自動決定\n\n- `lines`: 在圖上加線\n- `points`: 在圖上加點\n- `text`: 在圖上加字\n- `title`: add annotations to x, y axis labels, title, subtitle, outer margin \n- `mtext`: add arbitrary text to the margins (inner or outer) of the plot \n- `axis`: adding axis ticks/labels\n\n\n\n## Base Plot with Annotation\n\n```{r,fig.height=3.5}\nlibrary(datasets)\nwith(airquality, plot(Wind, Ozone))\n## Add a title\ntitle(main = \"Ozone and Wind in New York City\")  \n```\n\n\n\n## Base Plot with Annotation\n\n```{r,fig.height=3}\nwith(airquality, plot(Wind, Ozone, \n                      main = \"Ozone and Wind in NYC\"))\nwith(subset(airquality, Month == 5), \n     points(Wind, Ozone, col = \"blue\"))\n```\n\n\n\n## Base Plot with Annotation\n\n```{r,fig.height=3}\nwith(airquality, plot(Wind, Ozone, main = \"Ozone and Wind in NYC\", type = \"n\"))\nwith(subset(airquality, Month == 5), points(Wind, Ozone, col = \"blue\"))\nwith(subset(airquality, Month != 5), points(Wind, Ozone, col = \"red\"))\nlegend(\"topright\", pch = 1, col = c(\"blue\", \"red\"), \n       legend = c(\"May\", \"Other Months\"))\n```\n\n\n\n## Base Plot with Regression Line\n\n```{r,fig.height=3}\nwith(airquality, plot(Wind, Ozone, \n                      main = \"Ozone and Wind in NYC\", pch = 20))\nmodel <- lm(Ozone ~ Wind, airquality)\nabline(model, lwd = 2)\n```\n\n\n\n## Multiple Base Plots\n\n```{r,fig.height=3,fig.width=8}\npar(mfrow = c(1, 2))\nwith(airquality, {\n\tplot(Wind, Ozone, main = \"Ozone and Wind\")\n\tplot(Solar.R, Ozone, main = \"Ozone and Solar Radiation\")\n})\n```\n\n\n\n## Multiple Base Plots\n\n```{r,fig.height=3,fig.width=8}\npar(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))\nwith(airquality, {\n\tplot(Wind, Ozone, main = \"Ozone and Wind\")\n\tplot(Solar.R, Ozone, main = \"Ozone and Solar Radiation\")\n\tplot(Temp, Ozone, main = \"Ozone and Temperature\")\n\tmtext(\"Ozone and Weather in New York City\", outer = TRUE)\n})\n```\n\n\n\n## Summary\n\n* Plots in the base plotting system are created by calling successive R functions to \"build up\" a plot\n\n* Plotting occurs in two stages:\n    - Creation of a plot\n    - Annotation of a plot (adding lines, points, text, legends)\n\n* The base plotting system is very flexible and offers a high degree of control over plotting\n\n\n## 探索圖範例：又是大家熟悉的NBA...\n\n```{r message=FALSE,warning=FALSE}\nif (!require('SportsAnalytics')){\n    install.packages(\"SportsAnalytics\")\n    library(SportsAnalytics)\n}\nNBA1415<-fetch_NBAPlayerStatistics(\"14-15\")\n```\n\n\n## Simple Summaries of Data - 1\n\nOne dimension\n\n* Five-number summary\n* Boxplots 箱型圖\n* Histograms 直方圖\n* Density plot 密度圖\n* Barplot 條狀圖\n\n\n## Five Number Summary\n\n```{r}\nsummary(NBA1415$TotalPoints)\n```\n\n\n\n## Boxplot 箱型圖\n\n```{r}\nboxplot(NBA1415$TotalPoints, col = \"blue\")\n```\n\n\n\n## Histogram 直方圖\n\n```{r,fig.height=3.5}\nhist(NBA1415$TotalPoints, col = \"green\")\n```\n\n\n\n## Histogram 直方圖\n\n```{r,fig.height=3.5}\nhist(NBA1415$TotalPoints, col = \"green\")\nrug(NBA1415$TotalPoints)\n```\n\n\n\n## Histogram 直方圖\n\n```{r,fig.height=3.5}\nhist(NBA1415$TotalPoints, col = \"green\", breaks = 100)\nrug(NBA1415$TotalPoints)\n```\n\n\n\n## 層層疊 -1\n\n```{r}\nboxplot(NBA1415$TotalPoints, col = \"blue\")\nabline(h = 500)\n```\n\n\n\n\n## 層層疊 -1\n\n```{r,fig.height=3.5}\nhist(NBA1415$TotalPoints, col = \"green\")\nabline(v = 500, lwd = 2)\nabline(v = median(NBA1415$TotalPoints), col = \"magenta\", lwd = 4)\n```\n\n\n\n## Barplot 條狀圖\n\n```{r}\nbarplot(table(NBA1415$Team), \n        col = \"wheat\", main = \"Number of Palyers in Each Team\")\n```\n\n\n\n## Simple Summaries of Data - 2\n\nTwo dimensions\n\n* Multiple/overlayed 1-D plots (Lattice/ggplot2)\n* Scatterplots\n* Smooth scatterplots\n\n$> 2$ dimensions\n\n* Overlayed/multiple 2-D plots; coplots\n* Use color, size, shape to add dimensions\n* Spinning plots\n* Actual 3-D plots (not that useful)\n\n\n\n\n## Multiple Boxplots\n\n```{r,fig.width=8,fig.height=3.5}\nboxplot(TotalPoints ~ Team, data = NBA1415, col = \"red\")\n```\n\n\n\n## Multiple Histograms\n\n```{r,fig.width=8,fig.height=3.5}\npar(mfrow = c(2, 1), mar = c(4, 4, 2, 1))\nhist(subset(NBA1415, Team == \"SAN\")$TotalPoints, col = \"green\")\nhist(subset(NBA1415, Team == \"GSW\")$TotalPoints, col = \"green\")\n```\n\n\n\n## Scatterplot\n\n```{r,fig.height=3}\npar(mfrow = c(1, 1))\nplot(NBA1415$TotalMinutesPlayed, NBA1415$TotalPoints)\nabline(h = 500, lwd = 2, lty = 2)\n```\n\n\n\n## Scatterplot - Using Color\n\n```{r,fig.height=3}\nplot(NBA1415$TotalMinutesPlayed, NBA1415$TotalPoints,col=NBA1415$Team)\nabline(h = 500, lwd = 2, lty = 2)\n```\n\n\n\n## Multiple Scatterplots\n\n```{r,fig.height=3.5,fig.width=8}\npar(mfrow = c(1, 2), mar = c(5, 4, 2, 1))\nwith(subset(NBA1415, Team == \"SAN\"), plot(TotalMinutesPlayed, TotalPoints, main = \"SAN\"))\nwith(subset(NBA1415, Team == \"GSW\"), plot(TotalMinutesPlayed, TotalPoints, main = \"GSW\"))\n```\n\n\n\n## Summary\n\n* Exploratory plots are \"quick and dirty\"\n\n* Let you summarize the data (usually graphically) and highlight any broad features\n\n* Explore basic questions and hypotheses (and perhaps rule them out)\n\n* Suggest modeling strategies for the \"next step\"\n\n\n\n\n## Further resources\n\n* [R Graph Gallery](http://gallery.r-enthusiasts.com/)\n* [R Graph Gallery](http://www.r-graph-gallery.com/all-graphs/)\n* [R Bloggers](http://www.r-bloggers.com/)\n* [Interactive visualizations with R](http://ouzor.github.io/blog/2014/11/21/interactive-visualizations.html)\n\n\n\n\n\n# Plotting System -Lattice\n\n## The Lattice Plotting System\n包括以下Packaes:\n\n- *lattice*: 包括畫圖相關的函數functions: `xyplot`, `bwplot`, `levelplot`\n\n- *grid*: *lattice* package 的基礎\n\n- 一個函數畫完圖，不能再加標記和文字等\n\n\n\n## Lattice Functions\n\n- `xyplot`: 畫散佈圖 scatterplots \n- `bwplot`: 畫盒鬚圖box-and-whiskers plots (“boxplots”)\n- `histogram`: 直方圖 histograms\n- `stripplot`: 盒鬚圖＋點\n- `dotplot`:  dots on \"violin strings\"\n- `splom`: 散佈圖的矩陣\n- `levelplot`, `contourplot`: for plotting \"image\" data\n\n\n\n## Lattice Functions\n\nLattice functions 通常第一個參數是 formula \n```r\nxyplot(y ~ x | f * g, data)\n```\n- We use the *formula notation* here, hence the `~`.\n\n- `y~x`: y-axis~x-axis\n\n- f,g are _conditioning variables_ \n    — optional\n    - `*`:  an interaction between two variables\n\n- 第二個參數是資料`data`\n\n- If no other arguments are passed, there are defaults that can be used.\n\n\n## Simple Lattice Plot\n\n```{r,fig.height=3.5}\nlibrary(lattice)\nlibrary(datasets)\n## Simple scatterplot\nxyplot(Ozone ~ Wind, data = airquality)\n```\n\n\n\n## Simple Lattice Plot\n\n```{r,fig.width=8,fig.height=3.5}\nlibrary(datasets)\nlibrary(lattice)\n## Convert 'Month' to a factor variable\nairquality <- transform(airquality, Month = factor(Month)) \nxyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))\n```\n\n## Lattice Behavior\n\n```{r,fig.height=3.5,fig.width=5}\np <- xyplot(Ozone ~ Wind, data = airquality)  ## Nothing happens!\nprint(p)  ## Plot appears\n```\n```{r,eval=FALSE}\nxyplot(Ozone ~ Wind, data = airquality)  ## Auto-printing\n```\n\n\n\n## Lattice Panel Functions\n\n- Lattice functions have a **panel function** which controls what\n  happens inside each panel of the plot.\n\n- The *lattice* package comes with default panel functions, but you\n  can supply your own if you want to customize what happens in each\n  panel\n\n- Panel functions receive the x/y coordinates of the data points\n  in their panel (along with any optional arguments)\n\n\n\n\n## Lattice Panel Functions\n\n```{r,fig.height=3.5,fig.width=8}\nset.seed(10)\nx <- rnorm(100)\nf <- rep(0:1, each = 50)\ny <- x + f - f * x+ rnorm(100, sd = 0.5)\nf <- factor(f, labels = c(\"Group 1\", \"Group 2\"))\nxyplot(y ~ x | f, layout = c(2, 1))  ## Plot with 2 panels\n```\n\n\n\n## Lattice Panel Functions\n\n```{r,fig.height=3}\n## Custom panel function\nxyplot(y ~ x | f, panel = function(x, y, ...) {\n       panel.xyplot(x, y, ...)  \n    ## First call the default panel function for 'xyplot'\n       panel.abline(h = median(y), lty = 2) \n       ## Add a horizontal line at the median\n})\n```\n\n\n\n## Lattice Panel Functions: Regression line\n\n```{r,fig.height=3}\n## Custom panel function\nxyplot(y ~ x | f, panel = function(x, y, ...) {\n               panel.xyplot(x, y, ...)  \n    ## First call default panel function\n               panel.lmline(x, y, col = 2)  \n               ## Overlay a simple linear regression line\n       })\n```\n\n\n\n## Many Panel Lattice Plot: Example from MAACS\n\n* Study: Mouse Allergen and Asthma Cohort Study (MAACS)\n\n* Study subjects: Children with asthma living in Baltimore City, many\n  allergic to mouse allergen\n\n* Design: Observational study, baseline home visit + every 3 months for a year.\n\n* Question: How does indoor airborne mouse allergen vary over time and\n  across subjects?\n\n\n[Ahluwalia et al., *Journal of Allergy and Clinical Immunology*, 2013](http://www.ncbi.nlm.nih.gov/pubmed/23810154)\n\n\n\n## Many Panel Lattice Plot\n\n```{r,echo=FALSE,cache=TRUE,fig.width=8}\nlibrary(lattice)\nenv <- readRDS(\"maacs_env.rds\")\nenv <- transform(env, MxNum = factor(MxNum))\nxyplot(log2(airmus) ~ VisitNum | MxNum, data = env, strip = FALSE, pch = 20, xlab = \"Visit Number\", ylab = expression(Log[2] * \"Airborne Mouse Allergen\"), main = \"Mouse Allergen and Asthma Cohort Study (Baltimore City)\")\n```\n\n\n\n## Summary\n\n* Lattice plots 用一個單一函數畫圖 (e.g. `xyplot`)\n\n* 空白和邊緣都有預設值\n\n* 想看一種圖在不同情況下的差異的時候，很適合\n\n* 使用Panel functions可以調整圖的細節\n\n\n",
    "created" : 1460364980345.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2642443433",
    "id" : "EB04CD64",
    "lastKnownWriteTime" : 1460365138,
    "last_content_update" : 1460365138233,
    "path" : "C:/Users/CGU/Desktop/R0411/R0411.Rmd",
    "project_path" : "R0411.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}